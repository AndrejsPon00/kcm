apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cluster-api-provider-aws.fullname" . }}-controller-manager
  labels:
    cluster.x-k8s.io/provider: infrastructure-aws
    clusterctl.cluster.x-k8s.io: ""
    control-plane: capa-controller-manager
  {{- include "cluster-api-provider-aws.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      cluster.x-k8s.io/provider: infrastructure-aws
      control-plane: capa-controller-manager
    {{- include "cluster-api-provider-aws.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        cluster.x-k8s.io/provider: infrastructure-aws
        control-plane: capa-controller-manager
      {{- include "cluster-api-provider-aws.selectorLabels" . | nindent 8 }}
      annotations:
        iam.amazonaws.com/role: {{ .Values.awsControllerIamRole }}
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: {{ .Values.k8sCpLabel }}
                operator: Exists
            weight: 10
          - preference:
              matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: Exists
            weight: 10
      containers:
      - args:
        - --leader-elect
        - --feature-gates=EKS={{ .Values.capaEks }},EKSEnableIAM={{ .Values.capaEksIam }},EKSAllowAddRoles={{ .Values.capaEksAddRoles }},EKSFargate={{ .Values.expEksFargate }},MachinePool={{ .Values.expMachinePool }},EventBridgeInstanceState={{ .Values.eventBridgeInstanceState }},AutoControllerIdentityCreator={{ .Values.autoControllerIdentityCreator }},BootstrapFormatIgnition={{ .Values.expBootstrapFormatIgnition }},ExternalResourceGC={{ .Values.expExternalResourceGc }},AlternativeGCStrategy={{ .Values.expAlternativeGcStrategy }},TagUnmanagedNetworkResources={{ .Values.tagUnmanagedNetworkResources }},ROSA={{ .Values.expRosa }}
        - --v={{ .Values.capaLoglevel }}
        - --diagnostics-address={{ .Values.capaDiagnosticsAddress }}
        - --insecure-diagnostics={{ .Values.capaInsecureDiagnostics }}
        env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: "cluster.local"
        {{- if .Values.credentialsSecretName }}
        - name: AWS_SHARED_CREDENTIALS_FILE
          value: /home/.aws/credentials
        {{- end }}
        image: {{ .Values.manager.image.repository }}/{{ .Values.manager.image.name }}:{{ .Values.manager.image.tag }}
        imagePullPolicy: {{ .Values.manager.imagePullPolicy }}
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: healthz
          periodSeconds: 10
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        - containerPort: 9440
          name: healthz
          protocol: TCP
        - containerPort: 8443
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: healthz
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          runAsGroup: 65532
          runAsUser: 65532
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
        {{- if .Values.credentialsSecretName }}
        - mountPath: /home/.aws
          name: credentials
        {{- end }}
      securityContext:
        fsGroup: 1000
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: {{ include "cluster-api-provider-aws.fullname" . }}-controller-manager
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: capa-webhook-service-cert
      {{- if .Values.credentialsSecretName }}
      - name: credentials
        secret:
          secretName: {{ .Values.credentialsSecretName }}
      {{- end }}
